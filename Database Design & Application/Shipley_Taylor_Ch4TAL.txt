mysql> 
mysql> #1. PROGRAM DOCUMENTATION
mysql> 
mysql> # IMPORTANT: You should use YOUR last and first name instead of mine!
mysql> 
mysql> # Taylor Shipley
mysql> # Assignment #5: Single-Table Query for the TAL Distributors Database
mysql> 
mysql> # The sql statement below checks if TAL database already exists. 
mysql> # If yes, it will delete it before creating a new one.
mysql> 
mysql> DROP DATABASE IF EXISTS TAL;
Terminal close -- query aborted
Aborted
mysql> 
mysql> #1. PROGRAM DOCUMENTATION
mysql> 
mysql> # IMPORTANT: You should use YOUR last and first name instead of mine!
mysql> 
mysql> # Taylor Shipley
mysql> # Assignment #5: Single-Table Query for the TAL Distributors Database
mysql> 
mysql> # The sql statement below checks if TAL database already exists. 
mysql> # If yes, it will delete it before creating a new one.
mysql> 
mysql> DROP DATABASE IF EXISTS TAL;
Query OK, 5 rows affected (0.04 sec)

mysql> 
mysql> # Create the database TAL
mysql> 
mysql> CREATE DATABASE TAL;
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> # Tell SQL that you want to use the database named TAL
mysql> 
mysql> USE TAL;
Database changed
mysql> 
mysql> # This is necessary for SQL because it can store more than ONE database and needs to be told which one you want to use.
mysql>  
mysql> #2. CREATING THE TABLE STRUCTURES
mysql> 
mysql> # Defining the REP table structure
mysql> 
mysql> CREATE TABLE REP
    -> (REP_NUM CHAR(2) PRIMARY KEY,
    -> LAST_NAME CHAR(15),
    -> FIRST_NAME CHAR(15),
    -> STREET CHAR(15),
    -> CITY CHAR(15),
    -> STATE CHAR(2),
    -> POSTAL_CODE CHAR(5),
    -> COMMISSION DECIMAL(7,2),
    -> RATE DECIMAL(3,2) );
Query OK, 0 rows affected (0.01 sec)

mysql> 
mysql> # Defining the CUSTOMER table structure
mysql> 
mysql> CREATE TABLE CUSTOMER
    -> (CUSTOMER_NUM CHAR(3) PRIMARY KEY,
    -> CUSTOMER_NAME CHAR(35) NOT NULL,
    -> STREET CHAR(20),
    -> CITY CHAR(15),
    -> STATE CHAR(2),
    -> POSTAL_CODE CHAR(5),
    -> BALANCE DECIMAL(8,2),
    -> CREDIT_LIMIT DECIMAL(8,2),
    -> REP_NUM CHAR(2) );
Query OK, 0 rows affected (0.01 sec)

mysql> 
mysql> # Defining the ORDERS table structure
mysql> 
mysql> CREATE TABLE ORDERS
    -> (ORDER_NUM CHAR(5) PRIMARY KEY,
    -> ORDER_DATE DATE,
    -> CUSTOMER_NUM CHAR(3) );
Query OK, 0 rows affected (0.00 sec)

mysql> 
mysql> # Defining the ITEM table structure
mysql> 
mysql> CREATE TABLE ITEM
    -> (ITEM_NUM CHAR(4) PRIMARY KEY,
    -> DESCRIPTION CHAR(30),
    -> ON_HAND DECIMAL(4,0),
    -> CATEGORY CHAR(3),
    -> STOREHOUSE CHAR(1),
    -> PRICE DECIMAL(6,2) );
Query OK, 0 rows affected (0.01 sec)

mysql> 
mysql> # Defining the ORDER_LINE table structure
mysql> 
mysql> CREATE TABLE ORDER_LINE
    -> (ORDER_NUM CHAR(5),
    -> ITEM_NUM CHAR(4),
    -> NUM_ORDERED DECIMAL(3,0),
    -> QUOTED_PRICE DECIMAL(6,2),
    -> PRIMARY KEY (ORDER_NUM, ITEM_NUM) );
Query OK, 0 rows affected (0.01 sec)

mysql> 
mysql> #3. VERIFYING THE TABLE DESIGN ACCURACY
mysql> 
mysql> SHOW COLUMNS FROM REP;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| REP_NUM     | char(2)      | NO   | PRI | NULL    |       |
| LAST_NAME   | char(15)     | YES  |     | NULL    |       |
| FIRST_NAME  | char(15)     | YES  |     | NULL    |       |
| STREET      | char(15)     | YES  |     | NULL    |       |
| CITY        | char(15)     | YES  |     | NULL    |       |
| STATE       | char(2)      | YES  |     | NULL    |       |
| POSTAL_CODE | char(5)      | YES  |     | NULL    |       |
| COMMISSION  | decimal(7,2) | YES  |     | NULL    |       |
| RATE        | decimal(3,2) | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
9 rows in set (0.00 sec)

mysql> SHOW COLUMNS FROM CUSTOMER;
+---------------+--------------+------+-----+---------+-------+
| Field         | Type         | Null | Key | Default | Extra |
+---------------+--------------+------+-----+---------+-------+
| CUSTOMER_NUM  | char(3)      | NO   | PRI | NULL    |       |
| CUSTOMER_NAME | char(35)     | NO   |     | NULL    |       |
| STREET        | char(20)     | YES  |     | NULL    |       |
| CITY          | char(15)     | YES  |     | NULL    |       |
| STATE         | char(2)      | YES  |     | NULL    |       |
| POSTAL_CODE   | char(5)      | YES  |     | NULL    |       |
| BALANCE       | decimal(8,2) | YES  |     | NULL    |       |
| CREDIT_LIMIT  | decimal(8,2) | YES  |     | NULL    |       |
| REP_NUM       | char(2)      | YES  |     | NULL    |       |
+---------------+--------------+------+-----+---------+-------+
9 rows in set (0.00 sec)

mysql> SHOW COLUMNS FROM ORDERS;
+--------------+---------+------+-----+---------+-------+
| Field        | Type    | Null | Key | Default | Extra |
+--------------+---------+------+-----+---------+-------+
| ORDER_NUM    | char(5) | NO   | PRI | NULL    |       |
| ORDER_DATE   | date    | YES  |     | NULL    |       |
| CUSTOMER_NUM | char(3) | YES  |     | NULL    |       |
+--------------+---------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> SHOW COLUMNS FROM ITEM;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| ITEM_NUM    | char(4)      | NO   | PRI | NULL    |       |
| DESCRIPTION | char(30)     | YES  |     | NULL    |       |
| ON_HAND     | decimal(4,0) | YES  |     | NULL    |       |
| CATEGORY    | char(3)      | YES  |     | NULL    |       |
| STOREHOUSE  | char(1)      | YES  |     | NULL    |       |
| PRICE       | decimal(6,2) | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
6 rows in set (0.00 sec)

mysql> SHOW COLUMNS FROM ORDER_LINE;
+--------------+--------------+------+-----+---------+-------+
| Field        | Type         | Null | Key | Default | Extra |
+--------------+--------------+------+-----+---------+-------+
| ORDER_NUM    | char(5)      | NO   | PRI | NULL    |       |
| ITEM_NUM     | char(4)      | NO   | PRI | NULL    |       |
| NUM_ORDERED  | decimal(3,0) | YES  |     | NULL    |       |
| QUOTED_PRICE | decimal(6,2) | YES  |     | NULL    |       |
+--------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> 
mysql> #4. POPULATING THE TABLES WITH DATA
mysql> 
mysql> # Entering the data into the REP table
mysql> 
mysql> INSERT INTO REP
    -> VALUES
    -> ('15','Campos','Rafael','724 Vinca Dr.','Grove','CA','90092',23457.50,0.06);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO REP
    -> VALUES
    -> ('30','Gradey','Megan','632 Liatris St.','Fullton','CA','90085',41317.00,0.08);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO REP
    -> VALUES
    -> ('45','Tian','Hui','1785 Tyler Ave.','Northfield','CA','90098',27789.25,0.06);
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO REP
    -> VALUES
    -> ('60','Sefton','Janet','267 Oakley St.','Congaree','CA','90097',0.00,0.06);
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> # Entering the data into the CUSTOMER table
mysql> # Note how 2 single quotation marks ('') has to be entered for a name such as Johnson's Department Store and Kline's when you define the data.
mysql> 
mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('126','Toys Galore','28 Laketon St.','Fullton','CA','90085',1210.25,7500.00,'15');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('260','Brookings Direct','452 Columbus Dr.','Grove','CA','90092',575.00,10000.00,'30');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('334','The Everything Shop','342 Magee St.','Congaree','CA','90097',2345.75,7500.00,'45');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('386','Johnson''s Department Store','124 Main St.','Northfield','CA','90098',879.25,7500.00,'30');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('440','Grove Historical Museum Store','3456 Central Ave.','Fullton','CA','90085',345.00,5000.00,'45');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('502','Cards and More','167 Hale St.','Mesa','CA','90104',5025.75,5000.00,'15');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('586','Almondton General Store','3345 Devon Ave.','Almondton','CA','90125',3456.75,15000.00,'45');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('665','Cricket Gift Shop','372 Oxford St.','Grove','CA','90092',678.90,7500.00,'30');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('713','Cress Store','12 Rising Sun Ave.','Congaree','CA','90097',4234.60,10000.00,'15');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('796','Unique Gifts','786 Passmore St.','Northfield','CA','90098',124.75,7500.00,'45');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('824','Kline''s','945 Gilham St.','Mesa','CA','90104',2475.99,15000.00,'30');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO CUSTOMER
    -> VALUES
    -> ('893','All Season Gifts','382 Wildwood Ave.','Fullton','CA','90085',935.75,7500.00,'15');
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> # Entering the data into the ORDERS table
mysql> 
mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51608','2015-10-12','126');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51610','2015-10-12','334');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51613','2015-10-13','386');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51614','2015-10-13','260');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51617','2015-10-15','586');
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51619','2015-10-15','126');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51623','2015-10-15','586');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDERS
    -> VALUES
    -> ('51625','2015-10-16','796');
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> # Entering the data into the ITEM table
mysql> 
mysql> INSERT INTO ITEM
    -> VALUES
    -> ('AH74','Patience',9.00,'GME','3',22.99);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('BR23','Skittles',21.00,'GME','2',29.99);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('CD33','Wood Block Set (48 piece)',36.00,'TOY','1',89.49);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('DL51','Classic Railway Set',12.00,'TOY','3',107.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('DR67','Giant Star Brain Teaser',24.00,'PZL','2',31.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('DW23','Mancala',40.00,'GME','3',50.00);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('FD11','Rocking Horse',8.00,'TOY','3',124.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('FH24','Puzzle Gift Set',65.00,'PZL','1',38.95);
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('KA12','Cribbage Set',56.00,'GME','3',75.00);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('KD34','Pentominoes Brain Teaser',60.00,'PZL','2',14.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('KL78','Pick Up Sticks',110.00,'GME','1',10.95);
Query OK, 1 row affected (0.02 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('MT03','Zauberkasten Brain Teaser',45.00,'PZL','1',45.79);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('NL89','Wood Block Set (62 piece)',32.00,'TOY','3',119.75);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('TR40','Tic Tac Toe',75.00,'GME','2',13.99);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ITEM
    -> VALUES
    -> ('TW35','Fire Engine',30.00,'TOY','2',118.95);
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> # Entering the data into the ORDER_LINE table
mysql> 
mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51608','CD33',5.00,86.99);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51610','KL78',25.00,10.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51610','TR40',10.00,13.99);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51613','DL51',5.00,104.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51614','FD11',1.00,124.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51617','NL89',4.00,115.99);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51617','TW35',3.00,116.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51619','FD11',2.00,121.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51623','DR67',5.00,29.95);
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51623','FH24',12.00,36.95);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51623','KD34',10.00,13.10);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO ORDER_LINE
    -> VALUES
    -> ('51625','MT03',8.00,45.79);
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> #5. DISPLAY THE TABLE CONTENTS TO VERIFY DATA ACCURACY
mysql> 
mysql> SELECT * FROM REP;
+---------+-----------+------------+-----------------+------------+-------+-------------+------------+------+
| REP_NUM | LAST_NAME | FIRST_NAME | STREET          | CITY       | STATE | POSTAL_CODE | COMMISSION | RATE |
+---------+-----------+------------+-----------------+------------+-------+-------------+------------+------+
| 15      | Campos    | Rafael     | 724 Vinca Dr.   | Grove      | CA    | 90092       |   23457.50 | 0.06 |
| 30      | Gradey    | Megan      | 632 Liatris St. | Fullton    | CA    | 90085       |   41317.00 | 0.08 |
| 45      | Tian      | Hui        | 1785 Tyler Ave. | Northfield | CA    | 90098       |   27789.25 | 0.06 |
| 60      | Sefton    | Janet      | 267 Oakley St.  | Congaree   | CA    | 90097       |       0.00 | 0.06 |
+---------+-----------+------------+-----------------+------------+-------+-------------+------------+------+
4 rows in set (0.00 sec)

mysql> SELECT * FROM CUSTOMER;
+--------------+-------------------------------+--------------------+------------+-------+-------------+---------+--------------+---------+
| CUSTOMER_NUM | CUSTOMER_NAME                 | STREET             | CITY       | STATE | POSTAL_CODE | BALANCE | CREDIT_LIMIT | REP_NUM |
+--------------+-------------------------------+--------------------+------------+-------+-------------+---------+--------------+---------+
| 126          | Toys Galore                   | 28 Laketon St.     | Fullton    | CA    | 90085       | 1210.25 |      7500.00 | 15      |
| 260          | Brookings Direct              | 452 Columbus Dr.   | Grove      | CA    | 90092       |  575.00 |     10000.00 | 30      |
| 334          | The Everything Shop           | 342 Magee St.      | Congaree   | CA    | 90097       | 2345.75 |      7500.00 | 45      |
| 386          | Johnson's Department Store    | 124 Main St.       | Northfield | CA    | 90098       |  879.25 |      7500.00 | 30      |
| 440          | Grove Historical Museum Store | 3456 Central Ave.  | Fullton    | CA    | 90085       |  345.00 |      5000.00 | 45      |
| 502          | Cards and More                | 167 Hale St.       | Mesa       | CA    | 90104       | 5025.75 |      5000.00 | 15      |
| 586          | Almondton General Store       | 3345 Devon Ave.    | Almondton  | CA    | 90125       | 3456.75 |     15000.00 | 45      |
| 665          | Cricket Gift Shop             | 372 Oxford St.     | Grove      | CA    | 90092       |  678.90 |      7500.00 | 30      |
| 713          | Cress Store                   | 12 Rising Sun Ave. | Congaree   | CA    | 90097       | 4234.60 |     10000.00 | 15      |
| 796          | Unique Gifts                  | 786 Passmore St.   | Northfield | CA    | 90098       |  124.75 |      7500.00 | 45      |
| 824          | Kline's                       | 945 Gilham St.     | Mesa       | CA    | 90104       | 2475.99 |     15000.00 | 30      |
| 893          | All Season Gifts              | 382 Wildwood Ave.  | Fullton    | CA    | 90085       |  935.75 |      7500.00 | 15      |
+--------------+-------------------------------+--------------------+------------+-------+-------------+---------+--------------+---------+
12 rows in set (0.00 sec)

mysql> SELECT * FROM ORDERS;
+-----------+------------+--------------+
| ORDER_NUM | ORDER_DATE | CUSTOMER_NUM |
+-----------+------------+--------------+
| 51608     | 2015-10-12 | 126          |
| 51610     | 2015-10-12 | 334          |
| 51613     | 2015-10-13 | 386          |
| 51614     | 2015-10-13 | 260          |
| 51617     | 2015-10-15 | 586          |
| 51619     | 2015-10-15 | 126          |
| 51623     | 2015-10-15 | 586          |
| 51625     | 2015-10-16 | 796          |
+-----------+------------+--------------+
8 rows in set (0.00 sec)

mysql> SELECT * FROM ITEM;
+----------+---------------------------+---------+----------+------------+--------+
| ITEM_NUM | DESCRIPTION               | ON_HAND | CATEGORY | STOREHOUSE | PRICE  |
+----------+---------------------------+---------+----------+------------+--------+
| AH74     | Patience                  |       9 | GME      | 3          |  22.99 |
| BR23     | Skittles                  |      21 | GME      | 2          |  29.99 |
| CD33     | Wood Block Set (48 piece) |      36 | TOY      | 1          |  89.49 |
| DL51     | Classic Railway Set       |      12 | TOY      | 3          | 107.95 |
| DR67     | Giant Star Brain Teaser   |      24 | PZL      | 2          |  31.95 |
| DW23     | Mancala                   |      40 | GME      | 3          |  50.00 |
| FD11     | Rocking Horse             |       8 | TOY      | 3          | 124.95 |
| FH24     | Puzzle Gift Set           |      65 | PZL      | 1          |  38.95 |
| KA12     | Cribbage Set              |      56 | GME      | 3          |  75.00 |
| KD34     | Pentominoes Brain Teaser  |      60 | PZL      | 2          |  14.95 |
| KL78     | Pick Up Sticks            |     110 | GME      | 1          |  10.95 |
| MT03     | Zauberkasten Brain Teaser |      45 | PZL      | 1          |  45.79 |
| NL89     | Wood Block Set (62 piece) |      32 | TOY      | 3          | 119.75 |
| TR40     | Tic Tac Toe               |      75 | GME      | 2          |  13.99 |
| TW35     | Fire Engine               |      30 | TOY      | 2          | 118.95 |
+----------+---------------------------+---------+----------+------------+--------+
15 rows in set (0.00 sec)

mysql> SELECT * FROM ORDER_LINE;
+-----------+----------+-------------+--------------+
| ORDER_NUM | ITEM_NUM | NUM_ORDERED | QUOTED_PRICE |
+-----------+----------+-------------+--------------+
| 51608     | CD33     |           5 |        86.99 |
| 51610     | KL78     |          25 |        10.95 |
| 51610     | TR40     |          10 |        13.99 |
| 51613     | DL51     |           5 |       104.95 |
| 51614     | FD11     |           1 |       124.95 |
| 51617     | NL89     |           4 |       115.99 |
| 51617     | TW35     |           3 |       116.95 |
| 51619     | FD11     |           2 |       121.95 |
| 51623     | DR67     |           5 |        29.95 |
| 51623     | FH24     |          12 |        36.95 |
| 51623     | KD34     |          10 |        13.10 |
| 51625     | MT03     |           8 |        45.79 |
+-----------+----------+-------------+--------------+
12 rows in set (0.00 sec)

mysql> 
mysql> # Close the logfile before logging out
mysql> 
mysql> # 1. List the item number, description, and price for all items.
mysql> SELECT ITEM_NUM, DESCRIPTION, PRICE FROM ITEM;
+----------+---------------------------+--------+
| ITEM_NUM | DESCRIPTION               | PRICE  |
+----------+---------------------------+--------+
| AH74     | Patience                  |  22.99 |
| BR23     | Skittles                  |  29.99 |
| CD33     | Wood Block Set (48 piece) |  89.49 |
| DL51     | Classic Railway Set       | 107.95 |
| DR67     | Giant Star Brain Teaser   |  31.95 |
| DW23     | Mancala                   |  50.00 |
| FD11     | Rocking Horse             | 124.95 |
| FH24     | Puzzle Gift Set           |  38.95 |
| KA12     | Cribbage Set              |  75.00 |
| KD34     | Pentominoes Brain Teaser  |  14.95 |
| KL78     | Pick Up Sticks            |  10.95 |
| MT03     | Zauberkasten Brain Teaser |  45.79 |
| NL89     | Wood Block Set (62 piece) | 119.75 |
| TR40     | Tic Tac Toe               |  13.99 |
| TW35     | Fire Engine               | 118.95 |
+----------+---------------------------+--------+
15 rows in set (0.00 sec)

mysql> 
mysql> # 2. List all rows and columns for the complete ORDERS table.
mysql> SELECT * FROM ORDERS;
+-----------+------------+--------------+
| ORDER_NUM | ORDER_DATE | CUSTOMER_NUM |
+-----------+------------+--------------+
| 51608     | 2015-10-12 | 126          |
| 51610     | 2015-10-12 | 334          |
| 51613     | 2015-10-13 | 386          |
| 51614     | 2015-10-13 | 260          |
| 51617     | 2015-10-15 | 586          |
| 51619     | 2015-10-15 | 126          |
| 51623     | 2015-10-15 | 586          |
| 51625     | 2015-10-16 | 796          |
+-----------+------------+--------------+
8 rows in set (0.00 sec)

mysql> 
mysql> # 3. List the names of customers with credit limits of $10,000 or more.
mysql> SELECT * FROM CUSTOMER WHERE CREDIT_LIMIT >= 10000;
+--------------+-------------------------+--------------------+-----------+-------+-------------+---------+--------------+---------+
| CUSTOMER_NUM | CUSTOMER_NAME           | STREET             | CITY      | STATE | POSTAL_CODE | BALANCE | CREDIT_LIMIT | REP_NUM |
+--------------+-------------------------+--------------------+-----------+-------+-------------+---------+--------------+---------+
| 260          | Brookings Direct        | 452 Columbus Dr.   | Grove     | CA    | 90092       |  575.00 |     10000.00 | 30      |
| 586          | Almondton General Store | 3345 Devon Ave.    | Almondton | CA    | 90125       | 3456.75 |     15000.00 | 45      |
| 713          | Cress Store             | 12 Rising Sun Ave. | Congaree  | CA    | 90097       | 4234.60 |     10000.00 | 15      |
| 824          | Kline's                 | 945 Gilham St.     | Mesa      | CA    | 90104       | 2475.99 |     15000.00 | 30      |
+--------------+-------------------------+--------------------+-----------+-------+-------------+---------+--------------+---------+
4 rows in set (0.00 sec)

mysql> 
mysql> # 4. List the order number for each order placed by customer number 126 on 10/15/2015. (Hint: If you need help, use the discussion of the DATE data type in Figure 3-16 in Chapter 3.)
mysql> 
mysql> SELECT ORDER_NUM FROM ORDERS WHERE CUSTOMER_NUM = 126 AND ORDER_DATE = '2015-10-15';
+-----------+
| ORDER_NUM |
+-----------+
| 51619     |
+-----------+
1 row in set (0.00 sec)

mysql> 
mysql> # 5. List the number and name of each customer represented by sales rep 30 or sales rep 45.
mysql> SELECT CUSTOMER_NUM, CUSTOMER_NAME FROM CUSTOMER WHERE REP_NUM IN (30, 45);
+--------------+-------------------------------+
| CUSTOMER_NUM | CUSTOMER_NAME                 |
+--------------+-------------------------------+
| 260          | Brookings Direct              |
| 334          | The Everything Shop           |
| 386          | Johnson's Department Store    |
| 440          | Grove Historical Museum Store |
| 586          | Almondton General Store       |
| 665          | Cricket Gift Shop             |
| 796          | Unique Gifts                  |
| 824          | Kline's                       |
+--------------+-------------------------------+
8 rows in set (0.00 sec)

mysql> 
mysql> # 6. List the item number and description of each item that is not in category PZL.
mysql> SELECT ITEM_NUM, DESCRIPTION FROM ITEM WHERE NOT CATEGORY = 'PZL';
+----------+---------------------------+
| ITEM_NUM | DESCRIPTION               |
+----------+---------------------------+
| AH74     | Patience                  |
| BR23     | Skittles                  |
| CD33     | Wood Block Set (48 piece) |
| DL51     | Classic Railway Set       |
| DW23     | Mancala                   |
| FD11     | Rocking Horse             |
| KA12     | Cribbage Set              |
| KL78     | Pick Up Sticks            |
| NL89     | Wood Block Set (62 piece) |
| TR40     | Tic Tac Toe               |
| TW35     | Fire Engine               |
+----------+---------------------------+
11 rows in set (0.00 sec)

mysql> 
mysql> # 7. List the item number, description, and number of units on hand for each item that has between 20 and 40 units on hand, including both 20 and 40. Do this two ways.
mysql> SELECT ITEM_NUM, DESCRIPTION, ON_HAND FROM ITEM WHERE ON_HAND >= 20 AND ON_HAND <= 40;
+----------+---------------------------+---------+
| ITEM_NUM | DESCRIPTION               | ON_HAND |
+----------+---------------------------+---------+
| BR23     | Skittles                  |      21 |
| CD33     | Wood Block Set (48 piece) |      36 |
| DR67     | Giant Star Brain Teaser   |      24 |
| DW23     | Mancala                   |      40 |
| NL89     | Wood Block Set (62 piece) |      32 |
| TW35     | Fire Engine               |      30 |
+----------+---------------------------+---------+
6 rows in set (0.00 sec)

mysql> SELECT ITEM_NUM, DESCRIPTION, ON_HAND FROM ITEM WHERE ON_HAND BETWEEN 20 AND 40;
+----------+---------------------------+---------+
| ITEM_NUM | DESCRIPTION               | ON_HAND |
+----------+---------------------------+---------+
| BR23     | Skittles                  |      21 |
| CD33     | Wood Block Set (48 piece) |      36 |
| DR67     | Giant Star Brain Teaser   |      24 |
| DW23     | Mancala                   |      40 |
| NL89     | Wood Block Set (62 piece) |      32 |
| TW35     | Fire Engine               |      30 |
+----------+---------------------------+---------+
6 rows in set (0.00 sec)

mysql> 
mysql> # 8. List the item number, description, and on-hand value (units on hand * unit price) of each item in category TOY. (On-hand value is really units on hand * cost, but there is no COST column in the ITEM table.) Assign the name ON_HAND_VALUE to the computed column.
mysql> SELECT ITEM_NUM, DESCRIPTION, (ON_HAND * PRICE) AS ON_HAND_VALUE FROM ITEM WHERE CATEGORY = 'TOY';
+----------+---------------------------+---------------+
| ITEM_NUM | DESCRIPTION               | ON_HAND_VALUE |
+----------+---------------------------+---------------+
| CD33     | Wood Block Set (48 piece) |       3221.64 |
| DL51     | Classic Railway Set       |       1295.40 |
| FD11     | Rocking Horse             |        999.60 |
| NL89     | Wood Block Set (62 piece) |       3832.00 |
| TW35     | Fire Engine               |       3568.50 |
+----------+---------------------------+---------------+
5 rows in set (0.00 sec)

mysql> 
mysql> # 9. List the item number, description, and on-hand value for each item whose on-hand value is at least $1,500. Assign the name ON_HAND_VALUE to the computed column.
mysql> SELECT ITEM_NUM, DESCRIPTION, (ON_HAND * PRICE) AS ON_HAND_VALUE FROM ITEM WHERE (ON_HAND * PRICE) >= 1500;
+----------+---------------------------+---------------+
| ITEM_NUM | DESCRIPTION               | ON_HAND_VALUE |
+----------+---------------------------+---------------+
| CD33     | Wood Block Set (48 piece) |       3221.64 |
| DW23     | Mancala                   |       2000.00 |
| FH24     | Puzzle Gift Set           |       2531.75 |
| KA12     | Cribbage Set              |       4200.00 |
| MT03     | Zauberkasten Brain Teaser |       2060.55 |
| NL89     | Wood Block Set (62 piece) |       3832.00 |
| TW35     | Fire Engine               |       3568.50 |
+----------+---------------------------+---------------+
7 rows in set (0.00 sec)

mysql> 
mysql> # 10. Use the IN operator to list the item number and description of each item in category GME or PZL.
mysql> SELECT ITEM_NUM, DESCRIPTION FROM ITEM WHERE CATEGORY IN ('GME', 'PZL');
+----------+---------------------------+
| ITEM_NUM | DESCRIPTION               |
+----------+---------------------------+
| AH74     | Patience                  |
| BR23     | Skittles                  |
| DR67     | Giant Star Brain Teaser   |
| DW23     | Mancala                   |
| FH24     | Puzzle Gift Set           |
| KA12     | Cribbage Set              |
| KD34     | Pentominoes Brain Teaser  |
| KL78     | Pick Up Sticks            |
| MT03     | Zauberkasten Brain Teaser |
| TR40     | Tic Tac Toe               |
+----------+---------------------------+
10 rows in set (0.00 sec)

mysql> 
mysql> # 11. Find the number and name of each customer whose name begins with the letter “C.”
mysql> SELECT CUSTOMER_NUM, CUSTOMER_NAME FROM CUSTOMER WHERE CUSTOMER_NAME LIKE 'C%';
+--------------+-------------------+
| CUSTOMER_NUM | CUSTOMER_NAME     |
+--------------+-------------------+
| 502          | Cards and More    |
| 665          | Cricket Gift Shop |
| 713          | Cress Store       |
+--------------+-------------------+
3 rows in set (0.00 sec)

mysql> 
mysql> # 12. List all details about all items. Order the output by description.
mysql> SELECT * FROM ITEM ORDER BY DESCRIPTION;
+----------+---------------------------+---------+----------+------------+--------+
| ITEM_NUM | DESCRIPTION               | ON_HAND | CATEGORY | STOREHOUSE | PRICE  |
+----------+---------------------------+---------+----------+------------+--------+
| DL51     | Classic Railway Set       |      12 | TOY      | 3          | 107.95 |
| KA12     | Cribbage Set              |      56 | GME      | 3          |  75.00 |
| TW35     | Fire Engine               |      30 | TOY      | 2          | 118.95 |
| DR67     | Giant Star Brain Teaser   |      24 | PZL      | 2          |  31.95 |
| DW23     | Mancala                   |      40 | GME      | 3          |  50.00 |
| AH74     | Patience                  |       9 | GME      | 3          |  22.99 |
| KD34     | Pentominoes Brain Teaser  |      60 | PZL      | 2          |  14.95 |
| KL78     | Pick Up Sticks            |     110 | GME      | 1          |  10.95 |
| FH24     | Puzzle Gift Set           |      65 | PZL      | 1          |  38.95 |
| FD11     | Rocking Horse             |       8 | TOY      | 3          | 124.95 |
| BR23     | Skittles                  |      21 | GME      | 2          |  29.99 |
| TR40     | Tic Tac Toe               |      75 | GME      | 2          |  13.99 |
| CD33     | Wood Block Set (48 piece) |      36 | TOY      | 1          |  89.49 |
| NL89     | Wood Block Set (62 piece) |      32 | TOY      | 3          | 119.75 |
| MT03     | Zauberkasten Brain Teaser |      45 | PZL      | 1          |  45.79 |
+----------+---------------------------+---------+----------+------------+--------+
15 rows in set (0.00 sec)

mysql> 
mysql> # 13. List all details about all items. Order the output by item number within storehouse. (That is, order the output by storehouse and then by item number.)
mysql> SELECT * FROM ITEM ORDER BY STOREHOUSE, ITEM_NUM;
+----------+---------------------------+---------+----------+------------+--------+
| ITEM_NUM | DESCRIPTION               | ON_HAND | CATEGORY | STOREHOUSE | PRICE  |
+----------+---------------------------+---------+----------+------------+--------+
| CD33     | Wood Block Set (48 piece) |      36 | TOY      | 1          |  89.49 |
| FH24     | Puzzle Gift Set           |      65 | PZL      | 1          |  38.95 |
| KL78     | Pick Up Sticks            |     110 | GME      | 1          |  10.95 |
| MT03     | Zauberkasten Brain Teaser |      45 | PZL      | 1          |  45.79 |
| BR23     | Skittles                  |      21 | GME      | 2          |  29.99 |
| DR67     | Giant Star Brain Teaser   |      24 | PZL      | 2          |  31.95 |
| KD34     | Pentominoes Brain Teaser  |      60 | PZL      | 2          |  14.95 |
| TR40     | Tic Tac Toe               |      75 | GME      | 2          |  13.99 |
| TW35     | Fire Engine               |      30 | TOY      | 2          | 118.95 |
| AH74     | Patience                  |       9 | GME      | 3          |  22.99 |
| DL51     | Classic Railway Set       |      12 | TOY      | 3          | 107.95 |
| DW23     | Mancala                   |      40 | GME      | 3          |  50.00 |
| FD11     | Rocking Horse             |       8 | TOY      | 3          | 124.95 |
| KA12     | Cribbage Set              |      56 | GME      | 3          |  75.00 |
| NL89     | Wood Block Set (62 piece) |      32 | TOY      | 3          | 119.75 |
+----------+---------------------------+---------+----------+------------+--------+
15 rows in set (0.00 sec)

mysql> 
mysql> # 14. How many customers have balances that are more than their credit limits?
mysql> SELECT COUNT(CUSTOMER_NAME) FROM CUSTOMER WHERE BALANCE > CREDIT_LIMIT;
+----------------------+
| COUNT(CUSTOMER_NAME) |
+----------------------+
|                    1 |
+----------------------+
1 row in set (0.00 sec)

mysql> 
mysql> # 15. Find the total of the balances for all customers represented by sales rep 15 with balances that are less than their credit limits.
mysql> SELECT SUM(BALANCE) FROM CUSTOMER WHERE REP_NUM = 15 AND BALANCE < CREDIT_LIMIT;
+--------------+
| SUM(BALANCE) |
+--------------+
|      6380.60 |
+--------------+
1 row in set (0.00 sec)

mysql> 
mysql> # 16. List the item number, description, and on-hand value of each item whose number of units on hand is more than the average number of units on hand for all items. (Hint: Use a subquery.)
mysql> SELECT ITEM_NUM, DESCRIPTION, (ON_HAND * PRICE) AS ON_HAND_VALUE FROM ITEM WHERE ITEM_NUM > (SELECT AVG(ITEM_NUM) FROM ITEM);
Empty set, 30 warnings (0.00 sec)

mysql> 
mysql> # 17. What is the price of the least expensive item in the database?
mysql> SELECT MIN(PRICE) FROM ITEM;
+------------+
| MIN(PRICE) |
+------------+
|      10.95 |
+------------+
1 row in set (0.00 sec)

mysql> 
mysql> # 18. What is the item number, description, and price of the least expensive item in the database? (Hint: Use a subquery.)
mysql> SELECT ITEM_NUM, DESCRIPTION, PRICE FROM ITEM WHERE (SELECT MIN(PRICE) FROM ITEM);
+----------+---------------------------+--------+
| ITEM_NUM | DESCRIPTION               | PRICE  |
+----------+---------------------------+--------+
| AH74     | Patience                  |  22.99 |
| BR23     | Skittles                  |  29.99 |
| CD33     | Wood Block Set (48 piece) |  89.49 |
| DL51     | Classic Railway Set       | 107.95 |
| DR67     | Giant Star Brain Teaser   |  31.95 |
| DW23     | Mancala                   |  50.00 |
| FD11     | Rocking Horse             | 124.95 |
| FH24     | Puzzle Gift Set           |  38.95 |
| KA12     | Cribbage Set              |  75.00 |
| KD34     | Pentominoes Brain Teaser  |  14.95 |
| KL78     | Pick Up Sticks            |  10.95 |
| MT03     | Zauberkasten Brain Teaser |  45.79 |
| NL89     | Wood Block Set (62 piece) | 119.75 |
| TR40     | Tic Tac Toe               |  13.99 |
| TW35     | Fire Engine               | 118.95 |
+----------+---------------------------+--------+
15 rows in set (0.00 sec)

mysql> 
mysql> # 19. List the sum of the balances of all customers for each sales rep. Order and group the results by sales rep number.
mysql> SELECT REP_NUM, SUM(BALANCE) FROM CUSTOMER GROUP BY REP_NUM ORDER BY REP_NUM ASC;
+---------+--------------+
| REP_NUM | SUM(BALANCE) |
+---------+--------------+
| 15      |     11406.35 |
| 30      |      4609.14 |
| 45      |      6272.25 |
+---------+--------------+
3 rows in set (0.00 sec)

mysql> 
mysql> # 20. List the sum of the balances of all customers for each sales rep, but restrict the output to those sales reps for which the sum is more than $5,000. Order the results by sales rep number.
mysql> SELECT REP_NUM, SUM(BALANCE) FROM CUSTOMER GROUP BY REP_NUM HAVING SUM(BALANCE) > 5000 ORDER BY REP_NUM ASC;
+---------+--------------+
| REP_NUM | SUM(BALANCE) |
+---------+--------------+
| 15      |     11406.35 |
| 45      |      6272.25 |
+---------+--------------+
2 rows in set (0.00 sec)

mysql> 
mysql> 
mysql> # 21. List the item number of any item with an unknown description.
mysql> SELECT ITEM_NUM FROM ITEM WHERE DESCRIPTION IS NULL;
Empty set (0.00 sec)

mysql> 
mysql> # 22. List the item number and description of all items that are in the PZL or TOY category and contain the word “Set” in the description.
mysql> SELECT ITEM_NUM, DESCRIPTION FROM ITEM WHERE CATEGORY IN ('PZL', 'TOY') AND DESCRIPTION LIKE '%Set%'; 
+----------+---------------------------+
| ITEM_NUM | DESCRIPTION               |
+----------+---------------------------+
| CD33     | Wood Block Set (48 piece) |
| DL51     | Classic Railway Set       |
| FH24     | Puzzle Gift Set           |
| NL89     | Wood Block Set (62 piece) |
+----------+---------------------------+
4 rows in set (0.00 sec)

mysql> 
mysql> # 23. TAL Distributors is considering discounting the price of all items by 10 percent. List the item number, description, and discounted price for all items. Use DISCOUNTED_PRICE as the name for the computed column.
mysql> SELECT ITEM_NUM, DESCRIPTION, (ROUND((PRICE * 0.9), 2)) AS DISCOUNTED_PRICE FROM ITEM;
+----------+---------------------------+------------------+
| ITEM_NUM | DESCRIPTION               | DISCOUNTED_PRICE |
+----------+---------------------------+------------------+
| AH74     | Patience                  |            20.69 |
| BR23     | Skittles                  |            26.99 |
| CD33     | Wood Block Set (48 piece) |            80.54 |
| DL51     | Classic Railway Set       |            97.16 |
| DR67     | Giant Star Brain Teaser   |            28.76 |
| DW23     | Mancala                   |            45.00 |
| FD11     | Rocking Horse             |           112.46 |
| FH24     | Puzzle Gift Set           |            35.06 |
| KA12     | Cribbage Set              |            67.50 |
| KD34     | Pentominoes Brain Teaser  |            13.46 |
| KL78     | Pick Up Sticks            |             9.86 |
| MT03     | Zauberkasten Brain Teaser |            41.21 |
| NL89     | Wood Block Set (62 piece) |           107.78 |
| TR40     | Tic Tac Toe               |            12.59 |
| TW35     | Fire Engine               |           107.06 |
+----------+---------------------------+------------------+
15 rows in set (0.00 sec)

mysql> 
mysql> 
mysql> notee
